name: Push to main branch
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release Main Branch
    runs-on: ubuntu-latest
    environment: alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Create .npmrc
        run: echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' >> .npmrc
      - name: Create env file
        run: |
          touch .env.production
          echo RELEASE=alpha >> .env.production
          echo POSTHOG_KEY=${{ secrets.POSTHOG_KEY }} >> .env.production
          echo POSTHOG_URL=${{ secrets.POSTHOG_URL }} >> .env.production
          echo COVALENT_API_KEY=${{ secrets.COVALENT_API_KEY }} >> .env.production
          echo GLACIER_URL=${{ secrets.GLACIER_URL }} >> .env.production
          echo PROXY_URL=${{ secrets.PROXY_URL }} >> .env.production
          echo CORE_EXTENSION_LANDING_URL=${{ secrets.CORE_EXTENSION_LANDING_URL }} >> .env.production
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env.production
          echo COINBASE_APP_ID=${{ secrets.COINBASE_APP_ID }} >> .env.production
          echo CORE_WEB_BASE_URL=${{ secrets.CORE_WEB_BASE_URL }} >> .env.production
      - name: Install dependencies
        run: yarn setup
      - name: Run tests
        run: yarn test
      - name: Build library
        run: yarn build:alpha
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCH: main
        run: yarn run semantic-release
  e2e:
    needs: release
    name: Run E2E Smoke Tests
    runs-on: ubuntu-latest
    environment: e2e
    env:
      LOG_LEVEL: ${{secrets.LOG_LEVEL}}
      RECOVERY_PHRASE: ${{secrets.RECOVERY_PHRASE}}
      METAMASK_RECOVERY_PHRASE: ${{secrets.METAMASK_RECOVERY_PHRASE}}
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Checkout automation repo
        uses: actions/checkout@v3
        with:
          repository: 'ava-labs/wdio-cucumber-e2e-test'
          path: './'
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Install automation repo dependencies
        run: npm install
      - name: Get latest release tag for browser extension
        uses: rez0n/actions-github-release@main
        id: latest_ext_tag
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: 'ava-labs/extension-avalanche'
          type: 'prerelease'
      - name: Output latest release tag
        run: echo ${{ steps.latest_ext_tag.outputs.release }}
      - name: Get latest extension zip
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'ava-labs/extension-avalanche'
          version: 'tags/${{ steps.latest_ext_tag.outputs.release }}'
          regex: true
          file: 'Avalanche-wallet-extension'
          target: './'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Output extension file version before renaming
        run: ls *.zip
      - name: Rename extension file
        run: mv *.zip extension.zip
      - name: Generate crx file
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          zipFilePath: './extension.zip'
          crxFilePath: './extension.crx'
          privateKey: ${{ secrets.CRX_PRIVATE_KEY }}
      - name: Running smoke tests against latest crx
        run: npm run ext:testnet-smoke
      - name: Success slack notification
        if: success()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "GH_RUN_LINK": "https://github.com/ava-labs/extension-avalanche/actions/runs/${{ github.run_id }}",
              "GH_RUN_STATUS": "PASSED",
              "STATUS_EMOJI": ":white_check_mark:",
              "TEST_RUN_TYPE": "Browser extension merge to main smoke tests"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Failure slack notification
        if: failure()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "GH_RUN_LINK": "https://github.com/ava-labs/extension-avalanche/actions/runs/${{ github.run_id }}",
              "GH_RUN_STATUS": "FAILED",
              "STATUS_EMOJI": ":alert:",
              "TEST_RUN_TYPE": "Browser extension merge to main smoke tests"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
